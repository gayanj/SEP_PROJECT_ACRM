<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSocket.SocketEngine.1.6.3.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.CertificateConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.#ctor(SuperSocket.SocketEngine.Configuration.CertificateConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.Bind(SuperSocket.SocketBase.Config.ICertificateConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.ClientCertificateRequiredGet">
            <summary>Sets the shim of CertificateConfig.get_ClientCertificateRequired()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.Constructor">
            <summary>Sets the shim of CertificateConfig.CertificateConfig()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.FilePathGet">
            <summary>Sets the shim of CertificateConfig.get_FilePath()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.KeyStorageFlagsGet">
            <summary>Sets the shim of CertificateConfig.get_KeyStorageFlags()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.PasswordGet">
            <summary>Sets the shim of CertificateConfig.get_Password()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.StoreLocationGet">
            <summary>Sets the shim of CertificateConfig.get_StoreLocation()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.StoreNameGet">
            <summary>Sets the shim of CertificateConfig.get_StoreName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.ThumbprintGet">
            <summary>Sets the shim of CertificateConfig.get_Thumbprint()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.ClientCertificateRequiredGet">
            <summary>Sets the shim of CertificateConfig.get_ClientCertificateRequired()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.FilePathGet">
            <summary>Sets the shim of CertificateConfig.get_FilePath()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.KeyStorageFlagsGet">
            <summary>Sets the shim of CertificateConfig.get_KeyStorageFlags()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.PasswordGet">
            <summary>Sets the shim of CertificateConfig.get_Password()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.StoreLocationGet">
            <summary>Sets the shim of CertificateConfig.get_StoreLocation()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.StoreNameGet">
            <summary>Sets the shim of CertificateConfig.get_StoreName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCertificateConfig.AllInstances.ThumbprintGet">
            <summary>Sets the shim of CertificateConfig.get_Thumbprint()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.CommandAssembly</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.#ctor(SuperSocket.SocketEngine.Configuration.CommandAssembly)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.Bind(SuperSocket.SocketBase.Config.ICommandAssemblyConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.AssemblyGet">
            <summary>Sets the shim of CommandAssembly.get_Assembly()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.Constructor">
            <summary>Sets the shim of CommandAssembly.CommandAssembly()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssembly.AllInstances.AssemblyGet">
            <summary>Sets the shim of CommandAssembly.get_Assembly()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.CommandAssemblyCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.#ctor(SuperSocket.SocketEngine.Configuration.CommandAssemblyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.Bind(System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.Config.ICommandAssemblyConfig})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.Constructor">
            <summary>Sets the shim of CommandAssemblyCollection.CommandAssemblyCollection()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimCommandAssemblyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.Listener</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.#ctor(SuperSocket.SocketEngine.Configuration.Listener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.Bind(SuperSocket.SocketBase.Config.IListenerConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.BacklogGet">
            <summary>Sets the shim of Listener.get_Backlog()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.Constructor">
            <summary>Sets the shim of Listener.Listener()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.IpGet">
            <summary>Sets the shim of Listener.get_Ip()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.PortGet">
            <summary>Sets the shim of Listener.get_Port()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.SecurityGet">
            <summary>Sets the shim of Listener.get_Security()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.AllInstances.BacklogGet">
            <summary>Sets the shim of Listener.get_Backlog()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.AllInstances.IpGet">
            <summary>Sets the shim of Listener.get_Ip()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.AllInstances.PortGet">
            <summary>Sets the shim of Listener.get_Port()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListener.AllInstances.SecurityGet">
            <summary>Sets the shim of Listener.get_Security()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.ListenerConfigCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.#ctor(SuperSocket.SocketEngine.Configuration.ListenerConfigCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.Bind(System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.Config.IListenerConfig})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.Constructor">
            <summary>Sets the shim of ListenerConfigCollection.ListenerConfigCollection()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimListenerConfigCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.Server</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.#ctor(SuperSocket.SocketEngine.Configuration.Server)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.Bind(SuperSocket.SocketBase.Config.IServerConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.GetChildConfigOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of Server.GetChildConfig(String childConfigName)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.CertificateConfigGet">
            <summary>Sets the shim of Server.get_CertificateConfig()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.CertificateGet">
            <summary>Sets the shim of Server.get_Certificate()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ClearIdleSessionGet">
            <summary>Sets the shim of Server.get_ClearIdleSession()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ClearIdleSessionIntervalGet">
            <summary>Sets the shim of Server.get_ClearIdleSessionInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.CommandAssembliesGet">
            <summary>Sets the shim of Server.get_CommandAssemblies()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.CommandAssembliesSuperSocketSocketBaseConfigIServerConfigget">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_CommandAssemblies()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.CommandLoaderGet">
            <summary>Sets the shim of Server.get_CommandLoader()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ConnectionFilterGet">
            <summary>Sets the shim of Server.get_ConnectionFilter()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.Constructor">
            <summary>Sets the shim of Server.Server()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.DefaultCultureGet">
            <summary>Sets the shim of Server.get_DefaultCulture()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.DisableSessionSnapshotGet">
            <summary>Sets the shim of Server.get_DisableSessionSnapshot()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.DisabledGet">
            <summary>Sets the shim of Server.get_Disabled()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.IdleSessionTimeOutGet">
            <summary>Sets the shim of Server.get_IdleSessionTimeOut()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.IpGet">
            <summary>Sets the shim of Server.get_Ip()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.KeepAliveIntervalGet">
            <summary>Sets the shim of Server.get_KeepAliveInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.KeepAliveTimeGet">
            <summary>Sets the shim of Server.get_KeepAliveTime()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ListenBacklogGet">
            <summary>Sets the shim of Server.get_ListenBacklog()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ListenersGet">
            <summary>Sets the shim of Server.get_Listeners()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ListenersSuperSocketSocketBaseConfigIServerConfigget">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Listeners()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.LogAllSocketExceptionGet">
            <summary>Sets the shim of Server.get_LogAllSocketException()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.LogBasicSessionActivityGet">
            <summary>Sets the shim of Server.get_LogBasicSessionActivity()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.LogCommandGet">
            <summary>Sets the shim of Server.get_LogCommand()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.LogFactoryGet">
            <summary>Sets the shim of Server.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.MaxConnectionNumberGet">
            <summary>Sets the shim of Server.get_MaxConnectionNumber()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.MaxRequestLengthGet">
            <summary>Sets the shim of Server.get_MaxRequestLength()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ModeGet">
            <summary>Sets the shim of Server.get_Mode()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of Server.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.PortGet">
            <summary>Sets the shim of Server.get_Port()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ReceiveBufferSizeGet">
            <summary>Sets the shim of Server.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ReceiveFilterFactoryGet">
            <summary>Sets the shim of Server.get_ReceiveFilterFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SecurityGet">
            <summary>Sets the shim of Server.get_Security()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SendBufferSizeGet">
            <summary>Sets the shim of Server.get_SendBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SendTimeOutGet">
            <summary>Sets the shim of Server.get_SendTimeOut()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SendingQueueSizeGet">
            <summary>Sets the shim of Server.get_SendingQueueSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ServerTypeGet">
            <summary>Sets the shim of Server.get_ServerType()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.ServerTypeNameGet">
            <summary>Sets the shim of Server.get_ServerTypeName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SessionSnapshotIntervalGet">
            <summary>Sets the shim of Server.get_SessionSnapshotInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.StartupOrderGet">
            <summary>Sets the shim of Server.get_StartupOrder()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SuperSocketSocketBaseConfigIServerConfigget_Name">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SuperSocketSocketBaseConfigIServerConfigget_OptionElements">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SuperSocketSocketBaseConfigIServerConfigget_Options">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Options()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.SyncSendGet">
            <summary>Sets the shim of Server.get_SyncSend()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.TextEncodingGet">
            <summary>Sets the shim of Server.get_TextEncoding()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.GetChildConfigOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SuperSocket.SocketEngine.Configuration.Server,System.String,``0})">
            <summary>Sets the shim of Server.GetChildConfig(String childConfigName)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.CertificateConfigGet">
            <summary>Sets the shim of Server.get_CertificateConfig()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.CertificateGet">
            <summary>Sets the shim of Server.get_Certificate()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ClearIdleSessionGet">
            <summary>Sets the shim of Server.get_ClearIdleSession()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ClearIdleSessionIntervalGet">
            <summary>Sets the shim of Server.get_ClearIdleSessionInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.CommandAssembliesGet">
            <summary>Sets the shim of Server.get_CommandAssemblies()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.CommandAssembliesSuperSocketSocketBaseConfigIServerConfigget">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_CommandAssemblies()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.CommandLoaderGet">
            <summary>Sets the shim of Server.get_CommandLoader()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ConnectionFilterGet">
            <summary>Sets the shim of Server.get_ConnectionFilter()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.DefaultCultureGet">
            <summary>Sets the shim of Server.get_DefaultCulture()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.DisableSessionSnapshotGet">
            <summary>Sets the shim of Server.get_DisableSessionSnapshot()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.DisabledGet">
            <summary>Sets the shim of Server.get_Disabled()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.IdleSessionTimeOutGet">
            <summary>Sets the shim of Server.get_IdleSessionTimeOut()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.IpGet">
            <summary>Sets the shim of Server.get_Ip()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.KeepAliveIntervalGet">
            <summary>Sets the shim of Server.get_KeepAliveInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.KeepAliveTimeGet">
            <summary>Sets the shim of Server.get_KeepAliveTime()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of Server.get_ListenBacklog()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ListenersGet">
            <summary>Sets the shim of Server.get_Listeners()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ListenersSuperSocketSocketBaseConfigIServerConfigget">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Listeners()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.LogAllSocketExceptionGet">
            <summary>Sets the shim of Server.get_LogAllSocketException()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.LogBasicSessionActivityGet">
            <summary>Sets the shim of Server.get_LogBasicSessionActivity()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.LogCommandGet">
            <summary>Sets the shim of Server.get_LogCommand()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.LogFactoryGet">
            <summary>Sets the shim of Server.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.MaxConnectionNumberGet">
            <summary>Sets the shim of Server.get_MaxConnectionNumber()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.MaxRequestLengthGet">
            <summary>Sets the shim of Server.get_MaxRequestLength()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ModeGet">
            <summary>Sets the shim of Server.get_Mode()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of Server.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.PortGet">
            <summary>Sets the shim of Server.get_Port()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of Server.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ReceiveFilterFactoryGet">
            <summary>Sets the shim of Server.get_ReceiveFilterFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SecurityGet">
            <summary>Sets the shim of Server.get_Security()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of Server.get_SendBufferSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SendTimeOutGet">
            <summary>Sets the shim of Server.get_SendTimeOut()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SendingQueueSizeGet">
            <summary>Sets the shim of Server.get_SendingQueueSize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ServerTypeGet">
            <summary>Sets the shim of Server.get_ServerType()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.ServerTypeNameGet">
            <summary>Sets the shim of Server.get_ServerTypeName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SessionSnapshotIntervalGet">
            <summary>Sets the shim of Server.get_SessionSnapshotInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.StartupOrderGet">
            <summary>Sets the shim of Server.get_StartupOrder()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SuperSocketSocketBaseConfigIServerConfigget_Name">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SuperSocketSocketBaseConfigIServerConfigget_OptionElements">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SuperSocketSocketBaseConfigIServerConfigget_Options">
            <summary>Sets the shim of Server.SuperSocket.SocketBase.Config.IServerConfig.get_Options()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.SyncSendGet">
            <summary>Sets the shim of Server.get_SyncSend()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServer.AllInstances.TextEncodingGet">
            <summary>Sets the shim of Server.get_TextEncoding()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.ServerCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.#ctor(SuperSocket.SocketEngine.Configuration.ServerCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.Bind(System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.Config.IServerConfig})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.AddNewServer">
            <summary>Sets the shim of ServerCollection.AddNew(Server newServer)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.Constructor">
            <summary>Sets the shim of ServerCollection.ServerCollection()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.RemoveString">
            <summary>Sets the shim of ServerCollection.Remove(String name)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.AllInstances.AddNewServer">
            <summary>Sets the shim of ServerCollection.AddNew(Server newServer)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimServerCollection.AllInstances.RemoveString">
            <summary>Sets the shim of ServerCollection.Remove(String name)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig">
            <summary>Shim type of SuperSocket.SocketEngine.Configuration.SocketServiceConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.#ctor(SuperSocket.SocketEngine.Configuration.SocketServiceConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.Bind(SuperSocket.SocketBase.Config.IConfigurationSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.Bind(SuperSocket.SocketBase.Config.IRootConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.GetChildConfigOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of SocketServiceConfig.GetChildConfig(String childConfigName)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.CommandLoadersGet">
            <summary>Sets the shim of SocketServiceConfig.get_CommandLoaders()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.CommandLoadersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_CommandLoaders()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ConnectionFiltersGet">
            <summary>Sets the shim of SocketServiceConfig.get_ConnectionFilters()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ConnectionFiltersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ConnectionFilters()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.Constructor">
            <summary>Sets the shim of SocketServiceConfig.SocketServiceConfig()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.DefaultCultureGet">
            <summary>Sets the shim of SocketServiceConfig.get_DefaultCulture()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.DisablePerformanceDataCollectorGet">
            <summary>Sets the shim of SocketServiceConfig.get_DisablePerformanceDataCollector()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.IsolationGet">
            <summary>Sets the shim of SocketServiceConfig.get_Isolation()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.LogFactoriesGet">
            <summary>Sets the shim of SocketServiceConfig.get_LogFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.LogFactoriesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_LogFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.LogFactoryGet">
            <summary>Sets the shim of SocketServiceConfig.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.MaxCompletionPortThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MaxCompletionPortThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.MaxWorkingThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MaxWorkingThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.MinCompletionPortThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MinCompletionPortThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.MinWorkingThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MinWorkingThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of SocketServiceConfig.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of SocketServiceConfig.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.OptionElementsGet">
            <summary>Sets the shim of SocketServiceConfig.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.OptionElementsSetNameValueCollection">
            <summary>Sets the shim of SocketServiceConfig.set_OptionElements(NameValueCollection value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.PerformanceDataCollectIntervalGet">
            <summary>Sets the shim of SocketServiceConfig.get_PerformanceDataCollectInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ReceiveFilterFactoriesGet">
            <summary>Sets the shim of SocketServiceConfig.get_ReceiveFilterFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ReceiveFilterFactoriesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ReceiveFilterFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ServerTypesGet">
            <summary>Sets the shim of SocketServiceConfig.get_ServerTypes()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ServerTypesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ServerTypes()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ServersGet">
            <summary>Sets the shim of SocketServiceConfig.get_Servers()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.ServersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_Servers()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.GetChildConfigOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SuperSocket.SocketEngine.Configuration.SocketServiceConfig,System.String,``0})">
            <summary>Sets the shim of SocketServiceConfig.GetChildConfig(String childConfigName)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.CommandLoadersGet">
            <summary>Sets the shim of SocketServiceConfig.get_CommandLoaders()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.CommandLoadersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_CommandLoaders()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ConnectionFiltersGet">
            <summary>Sets the shim of SocketServiceConfig.get_ConnectionFilters()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ConnectionFiltersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ConnectionFilters()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.DefaultCultureGet">
            <summary>Sets the shim of SocketServiceConfig.get_DefaultCulture()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.DisablePerformanceDataCollectorGet">
            <summary>Sets the shim of SocketServiceConfig.get_DisablePerformanceDataCollector()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.IsolationGet">
            <summary>Sets the shim of SocketServiceConfig.get_Isolation()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.LogFactoriesGet">
            <summary>Sets the shim of SocketServiceConfig.get_LogFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.LogFactoriesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_LogFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.LogFactoryGet">
            <summary>Sets the shim of SocketServiceConfig.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.MaxCompletionPortThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MaxCompletionPortThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.MaxWorkingThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MaxWorkingThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.MinCompletionPortThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MinCompletionPortThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.MinWorkingThreadsGet">
            <summary>Sets the shim of SocketServiceConfig.get_MinWorkingThreads()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of SocketServiceConfig.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of SocketServiceConfig.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.OptionElementsGet">
            <summary>Sets the shim of SocketServiceConfig.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.OptionElementsSetNameValueCollection">
            <summary>Sets the shim of SocketServiceConfig.set_OptionElements(NameValueCollection value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.PerformanceDataCollectIntervalGet">
            <summary>Sets the shim of SocketServiceConfig.get_PerformanceDataCollectInterval()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ReceiveFilterFactoriesGet">
            <summary>Sets the shim of SocketServiceConfig.get_ReceiveFilterFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ReceiveFilterFactoriesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ReceiveFilterFactories()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ServerTypesGet">
            <summary>Sets the shim of SocketServiceConfig.get_ServerTypes()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ServerTypesSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_ServerTypes()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ServersGet">
            <summary>Sets the shim of SocketServiceConfig.get_Servers()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.ShimSocketServiceConfig.AllInstances.ServersSuperSocketSocketBaseConfigIConfigurationSourceget">
            <summary>Sets the shim of SocketServiceConfig.SuperSocket.SocketBase.Config.IConfigurationSource.get_Servers()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.CertificateConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCertificateConfig.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.CommandAssembly</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.InitializeStub">
            <summary>Initializes a new instance of type StubCommandAssembly</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssembly.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.CommandAssemblyCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CreateNewElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CreateNewElement01">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.InitializeStub">
            <summary>Initializes a new instance of type StubCommandAssemblyCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubCommandAssemblyCollection.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubListener">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.Listener</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.InitializeStub">
            <summary>Initializes a new instance of type StubListener</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListener.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.ListenerConfigCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CreateNewElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CreateNewElement01">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.InitializeStub">
            <summary>Initializes a new instance of type StubListenerConfigCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubListenerConfigCollection.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubServer">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.Server</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.InitializeStub">
            <summary>Initializes a new instance of type StubServer</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of Server.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of Server.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementBase.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementBase.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementBase.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementBase.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServer.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.ServerCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CreateNewElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CreateNewElement01">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.InitializeStub">
            <summary>Initializes a new instance of type StubServerCollection</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubServerCollection.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig">
            <summary>Stub type of SuperSocket.SocketEngine.Configuration.SocketServiceConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.InitializeStub">
            <summary>Initializes a new instance of type StubSocketServiceConfig</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of SocketServiceConfig.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of SocketServiceConfig.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of SocketServiceConfig.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of SocketServiceConfig.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Configuration.Fakes.StubSocketServiceConfig.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport">
            <summary>Shim type of SuperSocket.SocketEngine.AssemblyImport</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.#ctor(SuperSocket.SocketEngine.AssemblyImport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.ConstructorString">
            <summary>Sets the shim of AssemblyImport.AssemblyImport(String importRoot)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.CurrentDomain_AssemblyResolveObjectResolveEventArgs">
            <summary>Sets the shim of AssemblyImport.CurrentDomain_AssemblyResolve(Object sender, ResolveEventArgs args)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimAssemblyImport.AllInstances.CurrentDomain_AssemblyResolveObjectResolveEventArgs">
            <summary>Sets the shim of AssemblyImport.CurrentDomain_AssemblyResolve(Object sender, ResolveEventArgs args)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory">
            <summary>Shim type of SuperSocket.SocketEngine.BootstrapFactory</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.CreateBootstrap">
            <summary>Sets the shim of BootstrapFactory.CreateBootstrap()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.CreateBootstrapFromConfigFileString">
            <summary>Sets the shim of BootstrapFactory.CreateBootstrapFromConfigFile(String configFile)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.CreateBootstrapIConfigurationSource">
            <summary>Sets the shim of BootstrapFactory.CreateBootstrap(IConfigurationSource config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimBootstrapFactory.CreateBootstrapString">
            <summary>Sets the shim of BootstrapFactory.CreateBootstrap(String configSectionName)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap">
            <summary>Shim type of SuperSocket.SocketEngine.DefaultBootstrap</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.#ctor(SuperSocket.SocketEngine.DefaultBootstrap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Bind(SuperSocket.SocketBase.IBootstrap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Bind(SuperSocket.SocketBase.IDynamicBootstrap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AddNewServerIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.AddNewServer(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AppServersGet">
            <summary>Sets the shim of DefaultBootstrap.get_AppServers()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.BaseDirectoryGet">
            <summary>Sets the shim of DefaultBootstrap.get_BaseDirectory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConfigGet">
            <summary>Sets the shim of DefaultBootstrap.get_Config()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConstructorIConfigurationSource">
            <summary>Sets the shim of DefaultBootstrap.DefaultBootstrap(IConfigurationSource config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConstructorIConfigurationSourceString">
            <summary>Sets the shim of DefaultBootstrap.DefaultBootstrap(IConfigurationSource config, String startupConfigFile)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConstructorIEnumerableOfIWorkItem">
            <summary>Sets the shim of DefaultBootstrap.DefaultBootstrap(IEnumerable`1&lt;IWorkItem&gt; appServers)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConstructorIRootConfigIEnumerableOfIWorkItem">
            <summary>Sets the shim of DefaultBootstrap.DefaultBootstrap(IRootConfig rootConfig, IEnumerable`1&lt;IWorkItem&gt; appServers)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ConstructorIRootConfigIEnumerableOfIWorkItemILogFactory">
            <summary>Sets the shim of DefaultBootstrap.DefaultBootstrap(IRootConfig rootConfig, IEnumerable`1&lt;IWorkItem&gt; appServers, ILogFactory logFactory)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.CreateWorkItemInstanceStringStatusInfoAttributeArray">
            <summary>Sets the shim of DefaultBootstrap.CreateWorkItemInstance(String serviceTypeName, StatusInfoAttribute[] serverStatusMetadata)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.CurrentDomain_UnhandledExceptionObjectUnhandledExceptionEventArgs">
            <summary>Sets the shim of DefaultBootstrap.CurrentDomain_UnhandledException(Object sender, UnhandledExceptionEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Dispose">
            <summary>Sets the shim of DefaultBootstrap.Dispose()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.DisposeBoolean">
            <summary>Sets the shim of DefaultBootstrap.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Initialize">
            <summary>Sets the shim of DefaultBootstrap.Initialize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.InitializeFuncOfIServerConfigIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.InitializeFuncOfIServerConfigIServerConfigILogFactory">
            <summary>Sets the shim of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver, ILogFactory logFactory)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.InitializeIDictionaryOfStringIPEndPoint">
            <summary>Sets the shim of DefaultBootstrap.Initialize(IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.InitializeILogFactory">
            <summary>Sets the shim of DefaultBootstrap.Initialize(ILogFactory logFactory)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.LogFactoryGet">
            <summary>Sets the shim of DefaultBootstrap.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.LogFactorySetILogFactory">
            <summary>Sets the shim of DefaultBootstrap.set_LogFactory(ILogFactory value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.PerfMonitorGet">
            <summary>Sets the shim of DefaultBootstrap.get_PerfMonitor()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.RegisterRemotingService">
            <summary>Sets the shim of DefaultBootstrap.RegisterRemotingService()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ReplaceListenEndPointIServerConfigIDictionaryOfStringIPEndPoint">
            <summary>Sets the shim of DefaultBootstrap.ReplaceListenEndPoint(IServerConfig serverConfig, IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.ResetPerfMoniter">
            <summary>Sets the shim of DefaultBootstrap.ResetPerfMoniter()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.SetDefaultCultureIRootConfig">
            <summary>Sets the shim of DefaultBootstrap.SetDefaultCulture(IRootConfig rootConfig)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Start">
            <summary>Sets the shim of DefaultBootstrap.Start()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.StartupConfigFileGet">
            <summary>Sets the shim of DefaultBootstrap.get_StartupConfigFile()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.StartupConfigFileSetString">
            <summary>Sets the shim of DefaultBootstrap.set_StartupConfigFile(String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.Stop">
            <summary>Sets the shim of DefaultBootstrap.Stop()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.SuperSocketSocketBaseIDynamicBootstrapAddAndStartIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.AddAndStart(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.SuperSocketSocketBaseIDynamicBootstrapAddIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.Add(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.SuperSocketSocketBaseIDynamicBootstrapRemoveString">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.Remove(String name)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap._AddNewServerb__1IServerConfig">
            <summary>Sets the shim of DefaultBootstrap.&lt;AddNewServer&gt;b__1(IServerConfig c)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap._Initializeb__bIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.&lt;Initialize&gt;b__b(IServerConfig c)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap._Initializeb__dIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.&lt;Initialize&gt;b__d(IServerConfig c)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.exceptionSource_ExceptionThrownObjectErrorEventArgs">
            <summary>Sets the shim of DefaultBootstrap.exceptionSource_ExceptionThrown(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.AddNewServerIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.AddNewServer(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.AppServersGet">
            <summary>Sets the shim of DefaultBootstrap.get_AppServers()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.BaseDirectoryGet">
            <summary>Sets the shim of DefaultBootstrap.get_BaseDirectory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.ConfigGet">
            <summary>Sets the shim of DefaultBootstrap.get_Config()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.CreateWorkItemInstanceStringStatusInfoAttributeArray">
            <summary>Sets the shim of DefaultBootstrap.CreateWorkItemInstance(String serviceTypeName, StatusInfoAttribute[] serverStatusMetadata)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.CurrentDomain_UnhandledExceptionObjectUnhandledExceptionEventArgs">
            <summary>Sets the shim of DefaultBootstrap.CurrentDomain_UnhandledException(Object sender, UnhandledExceptionEventArgs e)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.Dispose">
            <summary>Sets the shim of DefaultBootstrap.Dispose()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DefaultBootstrap.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.Initialize">
            <summary>Sets the shim of DefaultBootstrap.Initialize()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.InitializeFuncOfIServerConfigIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.InitializeFuncOfIServerConfigIServerConfigILogFactory">
            <summary>Sets the shim of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver, ILogFactory logFactory)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.InitializeIDictionaryOfStringIPEndPoint">
            <summary>Sets the shim of DefaultBootstrap.Initialize(IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.InitializeILogFactory">
            <summary>Sets the shim of DefaultBootstrap.Initialize(ILogFactory logFactory)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.LogFactoryGet">
            <summary>Sets the shim of DefaultBootstrap.get_LogFactory()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.LogFactorySetILogFactory">
            <summary>Sets the shim of DefaultBootstrap.set_LogFactory(ILogFactory value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.PerfMonitorGet">
            <summary>Sets the shim of DefaultBootstrap.get_PerfMonitor()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.RegisterRemotingService">
            <summary>Sets the shim of DefaultBootstrap.RegisterRemotingService()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.ReplaceListenEndPointIServerConfigIDictionaryOfStringIPEndPoint">
            <summary>Sets the shim of DefaultBootstrap.ReplaceListenEndPoint(IServerConfig serverConfig, IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.ResetPerfMoniter">
            <summary>Sets the shim of DefaultBootstrap.ResetPerfMoniter()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.SetDefaultCultureIRootConfig">
            <summary>Sets the shim of DefaultBootstrap.SetDefaultCulture(IRootConfig rootConfig)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.Start">
            <summary>Sets the shim of DefaultBootstrap.Start()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.StartupConfigFileGet">
            <summary>Sets the shim of DefaultBootstrap.get_StartupConfigFile()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.StartupConfigFileSetString">
            <summary>Sets the shim of DefaultBootstrap.set_StartupConfigFile(String value)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.Stop">
            <summary>Sets the shim of DefaultBootstrap.Stop()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.SuperSocketSocketBaseIDynamicBootstrapAddAndStartIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.AddAndStart(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.SuperSocketSocketBaseIDynamicBootstrapAddIServerConfig">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.Add(IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.SuperSocketSocketBaseIDynamicBootstrapRemoveString">
            <summary>Sets the shim of DefaultBootstrap.SuperSocket.SocketBase.IDynamicBootstrap.Remove(String name)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimDefaultBootstrap.AllInstances.exceptionSource_ExceptionThrownObjectErrorEventArgs">
            <summary>Sets the shim of DefaultBootstrap.exceptionSource_ExceptionThrown(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory">
            <summary>Shim type of SuperSocket.SocketEngine.SocketServerFactory</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.#ctor(SuperSocket.SocketEngine.SocketServerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.Bind(SuperSocket.SocketBase.ISocketServerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.CreateSocketServerOf1IAppServerListenerInfoArrayIServerConfig``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SuperSocket.SocketBase.IAppServer,SuperSocket.SocketBase.ListenerInfo[],SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.ISocketServer})">
            <summary>Sets the shim of SocketServerFactory.CreateSocketServer(IAppServer appServer, ListenerInfo[] listeners, IServerConfig config)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.Constructor">
            <summary>Sets the shim of SocketServerFactory.SocketServerFactory()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.ShimSocketServerFactory.AllInstances.CreateSocketServerOf1IAppServerListenerInfoArrayIServerConfig``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SuperSocket.SocketEngine.SocketServerFactory,SuperSocket.SocketBase.IAppServer,SuperSocket.SocketBase.ListenerInfo[],SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.ISocketServer})">
            <summary>Sets the shim of SocketServerFactory.CreateSocketServer(IAppServer appServer, ListenerInfo[] listeners, IServerConfig config)</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubAssemblyImport">
            <summary>Stub type of SuperSocket.SocketEngine.AssemblyImport</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubAssemblyImport.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubAssemblyImport.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyImport</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubAssemblyImport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubAssemblyImport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubAssemblyImport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap">
            <summary>Stub type of SuperSocket.SocketEngine.DefaultBootstrap</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.#ctor(SuperSocket.SocketBase.Config.IConfigurationSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.#ctor(System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.IWorkItem})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.#ctor(SuperSocket.SocketBase.Config.IConfigurationSource,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.#ctor(SuperSocket.SocketBase.Config.IRootConfig,System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.IWorkItem})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.#ctor(SuperSocket.SocketBase.Config.IRootConfig,System.Collections.Generic.IEnumerable{SuperSocket.SocketBase.IWorkItem},SuperSocket.SocketBase.Logging.ILogFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.CreateWorkItemInstance(System.String,SuperSocket.SocketBase.Metadata.StatusInfoAttribute[])">
            <summary>Sets the stub of DefaultBootstrap.CreateWorkItemInstance(String serviceTypeName, StatusInfoAttribute[] serverStatusMetadata)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.CreateWorkItemInstanceStringStatusInfoAttributeArray">
            <summary>Sets the stub of DefaultBootstrap.CreateWorkItemInstance(String serviceTypeName, StatusInfoAttribute[] serverStatusMetadata)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Dispose(System.Boolean)">
            <summary>Sets the stub of DefaultBootstrap.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.DisposeBoolean">
            <summary>Sets the stub of DefaultBootstrap.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize">
            <summary>Sets the stub of DefaultBootstrap.Initialize()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize(SuperSocket.SocketBase.Logging.ILogFactory)">
            <summary>Sets the stub of DefaultBootstrap.Initialize(ILogFactory logFactory)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize(System.Func{SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Config.IServerConfig})">
            <summary>Sets the stub of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize(System.Collections.Generic.IDictionary{System.String,System.Net.IPEndPoint})">
            <summary>Sets the stub of DefaultBootstrap.Initialize(IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize(System.Func{SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Config.IServerConfig},SuperSocket.SocketBase.Logging.ILogFactory)">
            <summary>Sets the stub of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver, ILogFactory logFactory)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.Initialize01">
            <summary>Sets the stub of DefaultBootstrap.Initialize()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InitializeFuncOfIServerConfigIServerConfig">
            <summary>Sets the stub of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InitializeFuncOfIServerConfigIServerConfigILogFactory">
            <summary>Sets the stub of DefaultBootstrap.Initialize(Func`2&lt;IServerConfig,IServerConfig&gt; serverConfigResolver, ILogFactory logFactory)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InitializeIDictionaryOfStringIPEndPoint">
            <summary>Sets the stub of DefaultBootstrap.Initialize(IDictionary`2&lt;String,IPEndPoint&gt; listenEndPointReplacement)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InitializeILogFactory">
            <summary>Sets the stub of DefaultBootstrap.Initialize(ILogFactory logFactory)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultBootstrap</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.RegisterRemotingService">
            <summary>Sets the stub of DefaultBootstrap.RegisterRemotingService()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.RegisterRemotingService01">
            <summary>Sets the stub of DefaultBootstrap.RegisterRemotingService()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubDefaultBootstrap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor">
            <summary>Stub type of SuperSocket.SocketEngine.IPerformanceMonitor</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.#ctor">
            <summary>Initializes a new instance of type StubIPerformanceMonitor</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.AttachBackingFieldToStatusUpdateInterval">
            <summary>Attaches delegates to emulate StubIPerformanceMonitor.StatusUpdateInterval as a property with a backing field.</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.Start">
            <summary>Sets the stub of IPerformanceMonitor.Start()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.StatusUpdateIntervalGet">
            <summary>Sets the stub of IPerformanceMonitor.get_StatusUpdateInterval()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.StatusUpdateIntervalSetInt32">
            <summary>Sets the stub of IPerformanceMonitor.set_StatusUpdateInterval(Int32 value)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.Stop">
            <summary>Sets the stub of IPerformanceMonitor.Stop()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.ssse::SuperSocket#SocketEngine#IPerformanceMonitor#Start">
            <summary>Sets the stub of IPerformanceMonitor.Start()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.ssse::SuperSocket#SocketEngine#IPerformanceMonitor#Stop">
            <summary>Sets the stub of IPerformanceMonitor.Stop()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubIPerformanceMonitor.ssse::SuperSocket#SocketEngine#IPerformanceMonitor#StatusUpdateInterval">
            <summary>Sets the stub of IPerformanceMonitor.get_StatusUpdateInterval()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubIProcessServer">
            <summary>Stub type of SuperSocket.SocketEngine.IProcessServer</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIProcessServer.#ctor">
            <summary>Initializes a new instance of type StubIProcessServer</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIProcessServer.ProcessIdGet">
            <summary>Sets the stub of IProcessServer.get_ProcessId()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubIProcessServer.ssse::SuperSocket#SocketEngine#IProcessServer#ProcessId">
            <summary>Sets the stub of IProcessServer.get_ProcessId()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem">
            <summary>Stub type of SuperSocket.SocketEngine.IRemoteWorkItem</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.#ctor">
            <summary>Initializes a new instance of type StubIRemoteWorkItem</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.CollectServerStatusStatusInfoCollection">
            <summary>Sets the stub of IStatusInfoSource.CollectServerStatus(StatusInfoCollection bootstrapStatus)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.GetServerStatusMetadata">
            <summary>Sets the stub of IStatusInfoSource.GetServerStatusMetadata()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.NameGet">
            <summary>Sets the stub of IWorkItemBase.get_Name()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.SessionCountGet">
            <summary>Sets the stub of IWorkItemBase.get_SessionCount()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.SetupStringStringStringIServerConfigProviderFactoryInfoArray">
            <summary>Sets the stub of IRemoteWorkItem.Setup(String serverType, String bootstrapUri, String assemblyImportRoot, IServerConfig config, ProviderFactoryInfo[] factories)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.Start">
            <summary>Sets the stub of IWorkItemBase.Start()</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.Stop">
            <summary>Sets the stub of IWorkItemBase.Stop()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IStatusInfoSource#CollectServerStatus(SuperSocket.SocketBase.StatusInfoCollection)">
            <summary>Sets the stub of IStatusInfoSource.CollectServerStatus(StatusInfoCollection bootstrapStatus)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IStatusInfoSource#GetServerStatusMetadata">
            <summary>Sets the stub of IStatusInfoSource.GetServerStatusMetadata()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#ISystemEndPoint#TransferSystemMessage(System.String,System.Object)">
            <summary>Sets the stub of ISystemEndPoint.TransferSystemMessage(String messageType, Object messageData)</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IWorkItemBase#Start">
            <summary>Sets the stub of IWorkItemBase.Start()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IWorkItemBase#Stop">
            <summary>Sets the stub of IWorkItemBase.Stop()</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.ssse::SuperSocket#SocketEngine#IRemoteWorkItem#Setup(System.String,System.String,System.String,SuperSocket.SocketBase.Config.IServerConfig,SuperSocket.SocketBase.Provider.ProviderFactoryInfo[])">
            <summary>Sets the stub of IRemoteWorkItem.Setup(String serverType, String bootstrapUri, String assemblyImportRoot, IServerConfig config, ProviderFactoryInfo[] factories)</summary>
        </member>
        <member name="F:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.TransferSystemMessageStringObject">
            <summary>Sets the stub of ISystemEndPoint.TransferSystemMessage(String messageType, Object messageData)</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IWorkItemBase#Name">
            <summary>Sets the stub of IWorkItemBase.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubIRemoteWorkItem.sssb::SuperSocket#SocketBase#IWorkItemBase#SessionCount">
            <summary>Sets the stub of IWorkItemBase.get_SessionCount()</summary>
        </member>
        <member name="T:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory">
            <summary>Stub type of SuperSocket.SocketEngine.SocketServerFactory</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubSocketServerFactory</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.SocketEngine.Fakes.StubSocketServerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
